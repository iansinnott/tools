#!/bin/bash
#
# v4l2-ctl --list-formats-ext 
# v4l2-ctl --list-devices
#   --set-fmt-video=width=1920,height=1080
# -vf 'scale=iw*.5:ih*.5' could be useful
#"nullsrc=size=1280x720 [background];
# camera is 16:9 or 4:3 depending on resolution
# sudo modprobe v4l2loopback devices=2 width=1920 height=1080 exclusive_caps=1

. $HOME/.screencast-props

phone=/dev/video4

yt_out=( -r 30 -g 100 -x265-params keyint=48:min-keyint=48:scenecut=-1 -b:v 2500k -b:a 128k -ar 44100 -acodec aac -vcodec libx264 -preset superfast -bufsize 1500k -crf 28 -f flv "rtmp://a.rtmp.youtube.com/live2/$key" )
v_out=( -f v4l2 $_virtual_composite )

if [[ $_dest == "virtual" ]]; then
  out=${v_out[@]}
else
  out=${yt_out[@]}
fi

mic() {
  # I think it can be done entirely with this
  pacmd load-module module-null-sink sink_name=yt
  pacmd update-sink-proplist yt device.description=yt
  pacmd load-module module-loopback 
}

cams() {
  comp_size="${_comp_width}x${_comp_height}"

  v4l2-ctl --set-fmt-video=width=$_cam_width,height=$_cam_height -d $_camera

  cam_height=$(( _comp_height / 2 ))
  if [[ $_cam_rotate == 0 ]]; then
    cam_width=$(( cam_height * 1000 / _cam_ratio ))
  else
    cam_width=$(( ( cam_height * _cam_ratio ) / 1000 ))
  fi
  cam_size="${cam_width}x${cam_height}"

  ff_audio=( -f pulse -i default )
  ff_screen=( -f x11grab -video_size ${_grabwidth}x${_grabheight} -framerate 12 -i :0.0+0,0 )
  ff_camera=( -i $_camera )
  ff_phone=( -i $phone )
  ff_nothing=( -f lavfi -i color=s=200x200:c=blue )

  ff_next=screen
  if [[ $_use_phone == 1 ]]; then
    ff_bottom_setting="[3:v] setpts=PTS-STARTPTS, transpose=1,scale=${cam_size} [phone];"
    ff_bottom_overlay="[background+screen][phone] overlay=shortest=1:x=0:y=540      [background+phone];"
    ff_bottom=${ff_phone[@]}
    ff_last="phone"
  else
    ff_bottom_setting=""
    ff_bottom_overlay=""
    ff_bottom=()
    ff_last="screen"
  fi

  [[ -n "$_camopts" ]] && _camopts+=','

  #_camopts="transpose=1,lenscorrection=cx=0.5:cy=0.5:k1=-0.015:k2=-0.072"
  set -x
  ffmpeg ${ff_audio[@]} ${ff_screen[@]} ${ff_camera[@]} ${ff_bottom[@]} -filter_complex \
  " color=s=${comp_size}:c=black                             [background];
    [1:v] setpts=PTS-STARTPTS, scale=${comp_size}            [screen];
    [2:v] setpts=PTS-STARTPTS, ${_camopts}scale=${cam_size} [cam];
    ${ff_bottom_setting}

    [background][screen]       overlay=shortest=1            [background+screen];
    ${ff_bottom_overlay}
    [background+$ff_last][cam]   overlay=shortest=1,format=yuv420p
  " ${out[@]}

}

cams
