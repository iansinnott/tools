#!/bin/bash
#
# v4l2-ctl --list-formats-ext 
# v4l2-ctl --list-devices
#   --set-fmt-video=width=1920,height=1080
# -vf 'scale=iw*.5:ih*.5' could be useful
# sudo modprobe v4l2loopback devices=2
# modprobe v4l2loopback width=1920 height=1080 exclusive_caps=1

. .screencast-secrets
camera=/dev/video0
virtual_composite=/dev/video3

yt_out=( -r 30 -g 100 -x265-params keyint=48:min-keyint=48:scenecut=-1 -b:v 2500k -b:a 128k -ar 44100 -acodec aac -vcodec libx264 -preset superfast -bufsize 1500k -crf 28 -f flv "rtmp://a.rtmp.youtube.com/live2/$key" )
v_out=( -f v4l2 $virtual_composite )

out=$v_out

mic() {
  # I think it can be done entirely with this
  pacmd load-module module-null-sink sink_name=yt
  pacmd update-sink-proplist yt device.description=yt
  pacmd load-module module-loopback 
}

cams1() {
  #"nullsrc=size=1280x720 [background];
  # camera is 16:9 or 4:3 depending on resolution
  # -framerate

  composite_height=720
  cam_height=$(( composite_height / 2 ))
  cam_width=$(( cam_height * 3/4 ))

  ffmpeg \
    -f pulse -i default \
    -f x11grab -video_size 4320x2430 -framerate 12 -i :0.0+0,0 \
    -i $camera -filter_complex \
  "color=s=1280x720:c=black [background];
  [1:v] setpts=PTS-STARTPTS, scale=1280x720           [screen];
  [2:v] setpts=PTS-STARTPTS, transpose=3,scale=${cam_width}x${cam_height} [cam];
  [background][screen]         overlay=shortest=1    [background+screen];
  [background+screen][cam]   overlay=shortest=1,hflip,format=yuv420p
  " ${v_out[@]}

}


cams1
